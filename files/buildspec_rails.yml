version: 0.2

env:
  variables:
    DOCKER_BUILDKIT: 1
  parameter-store:
    RAILS_MASTER_KEY: ${ssm_rails_master_key_name}

phases:
  pre_build:
    commands:
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${account_id}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      # NOTE: pull builder stage cache
      - docker pull ${rails_repository}:builder || exit 0
      - docker build --cache-from ${rails_repository}:builder -t ${rails_repository}:$IMAGE_TAG .
      - docker build --target builder -t ${rails_repository}:builder .
      - docker tag ${rails_repository}:$IMAGE_TAG ${rails_repository}:latest

      # TODO: db:migrate

      # NOTE: For deploy with CodePipeline.
      - printf '[{"name":"web","imageUri":"%s"}]' ${rails_repository}:$IMAGE_TAG > imagedefinitions.json
  post_build:
    commands:
      - docker push ${rails_repository}:$IMAGE_TAG
      - docker push ${rails_repository}:latest
      - docker push ${rails_repository}:builder

artifacts:
  files:
    - imagedefinitions.json
